/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export declare namespace WalletFactoryStorage {
  export type FacetStruct = {
    name: string;
    facetAddress: string;
    version: string;
  };

  export type FacetStructOutput = [string, string, string] & {
    name: string;
    facetAddress: string;
    version: string;
  };
}

export interface WalletFactoryInterface extends utils.Interface {
  functions: {
    "WALLET_CREATION()": FunctionFragment;
    "addFacet(string,address,string)": FunctionFragment;
    "addGuardian(bytes32,bytes32)": FunctionFragment;
    "createWallet(bytes32,address)": FunctionFragment;
    "createWalletDeterministic(bytes32,bytes32)": FunctionFragment;
    "getDiamond()": FunctionFragment;
    "getFacet(uint256)": FunctionFragment;
    "getFacetIndex(address)": FunctionFragment;
    "getFacets()": FunctionFragment;
    "getWallet(bytes32)": FunctionFragment;
    "predictDeterministicAddress(bytes32)": FunctionFragment;
    "removeGuardian(bytes32)": FunctionFragment;
    "setDiamond(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "WALLET_CREATION"
      | "WALLET_CREATION()"
      | "addFacet"
      | "addFacet(string,address,string)"
      | "addGuardian"
      | "addGuardian(bytes32,bytes32)"
      | "createWallet"
      | "createWallet(bytes32,address)"
      | "createWalletDeterministic"
      | "createWalletDeterministic(bytes32,bytes32)"
      | "getDiamond"
      | "getDiamond()"
      | "getFacet"
      | "getFacet(uint256)"
      | "getFacetIndex"
      | "getFacetIndex(address)"
      | "getFacets"
      | "getFacets()"
      | "getWallet"
      | "getWallet(bytes32)"
      | "predictDeterministicAddress"
      | "predictDeterministicAddress(bytes32)"
      | "removeGuardian"
      | "removeGuardian(bytes32)"
      | "setDiamond"
      | "setDiamond(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "WALLET_CREATION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WALLET_CREATION()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addFacet",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addFacet(string,address,string)",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addGuardian",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addGuardian(bytes32,bytes32)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createWallet",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createWallet(bytes32,address)",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createWalletDeterministic",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createWalletDeterministic(bytes32,bytes32)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getDiamond",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDiamond()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFacet",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacet(uint256)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetIndex",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetIndex(address)",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "getFacets", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getFacets()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWallet",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getWallet(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "predictDeterministicAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "predictDeterministicAddress(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeGuardian",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeGuardian(bytes32)",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "setDiamond", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setDiamond(address)",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "WALLET_CREATION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WALLET_CREATION()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addFacet", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addFacet(string,address,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addGuardian(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createWallet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createWallet(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createWalletDeterministic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createWalletDeterministic(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDiamond", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getDiamond()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFacet", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFacet(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetIndex(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFacets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFacets()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getWallet", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getWallet(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "predictDeterministicAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "predictDeterministicAddress(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeGuardian(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setDiamond", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setDiamond(address)",
    data: BytesLike
  ): Result;

  events: {
    "DiamondIsSet(address)": EventFragment;
    "FacetIsAdded(string,address,string)": EventFragment;
    "FacetIsRemoved(address)": EventFragment;
    "GuardianAdded(bytes32,bytes32)": EventFragment;
    "GuardianRemoved(bytes32,bytes32)": EventFragment;
    "NewDiamondWallet(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DiamondIsSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DiamondIsSet(address)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FacetIsAdded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "FacetIsAdded(string,address,string)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FacetIsRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FacetIsRemoved(address)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianAdded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GuardianAdded(bytes32,bytes32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GuardianRemoved"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GuardianRemoved(bytes32,bytes32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewDiamondWallet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewDiamondWallet(address)"): EventFragment;
}

export interface DiamondIsSetEventObject {
  wallet: string;
}
export type DiamondIsSetEvent = TypedEvent<[string], DiamondIsSetEventObject>;

export type DiamondIsSetEventFilter = TypedEventFilter<DiamondIsSetEvent>;

export interface FacetIsAddedEventObject {
  name: string;
  facetAddress: string;
  version: string;
}
export type FacetIsAddedEvent = TypedEvent<
  [string, string, string],
  FacetIsAddedEventObject
>;

export type FacetIsAddedEventFilter = TypedEventFilter<FacetIsAddedEvent>;

export interface FacetIsRemovedEventObject {
  facetAddress: string;
}
export type FacetIsRemovedEvent = TypedEvent<
  [string],
  FacetIsRemovedEventObject
>;

export type FacetIsRemovedEventFilter = TypedEventFilter<FacetIsRemovedEvent>;

export interface GuardianAddedEventObject {
  hashId: string;
  guardian: string;
}
export type GuardianAddedEvent = TypedEvent<
  [string, string],
  GuardianAddedEventObject
>;

export type GuardianAddedEventFilter = TypedEventFilter<GuardianAddedEvent>;

export interface GuardianRemovedEventObject {
  hashId: string;
  guardian: string;
}
export type GuardianRemovedEvent = TypedEvent<
  [string, string],
  GuardianRemovedEventObject
>;

export type GuardianRemovedEventFilter = TypedEventFilter<GuardianRemovedEvent>;

export interface NewDiamondWalletEventObject {
  instance: string;
}
export type NewDiamondWalletEvent = TypedEvent<
  [string],
  NewDiamondWalletEventObject
>;

export type NewDiamondWalletEventFilter =
  TypedEventFilter<NewDiamondWalletEvent>;

export interface WalletFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: WalletFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    WALLET_CREATION(overrides?: CallOverrides): Promise<[string]>;

    "WALLET_CREATION()"(overrides?: CallOverrides): Promise<[string]>;

    addFacet(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addFacet(string,address,string)"(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addGuardian(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addGuardian(bytes32,bytes32)"(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createWallet(
      hashId: BytesLike,
      owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createWallet(bytes32,address)"(
      hashId: BytesLike,
      owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createWalletDeterministic(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createWalletDeterministic(bytes32,bytes32)"(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getDiamond(overrides?: CallOverrides): Promise<[string]>;

    "getDiamond()"(overrides?: CallOverrides): Promise<[string]>;

    getFacet(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[WalletFactoryStorage.FacetStructOutput]>;

    "getFacet(uint256)"(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[WalletFactoryStorage.FacetStructOutput]>;

    getFacetIndex(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getFacetIndex(address)"(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFacets(
      overrides?: CallOverrides
    ): Promise<[WalletFactoryStorage.FacetStructOutput[]]>;

    "getFacets()"(
      overrides?: CallOverrides
    ): Promise<[WalletFactoryStorage.FacetStructOutput[]]>;

    getWallet(hashId: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    "getWallet(bytes32)"(
      hashId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    predictDeterministicAddress(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { predicted: string }>;

    "predictDeterministicAddress(bytes32)"(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { predicted: string }>;

    removeGuardian(
      hashId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "removeGuardian(bytes32)"(
      hashId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDiamond(
      diamond: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setDiamond(address)"(
      diamond: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  WALLET_CREATION(overrides?: CallOverrides): Promise<string>;

  "WALLET_CREATION()"(overrides?: CallOverrides): Promise<string>;

  addFacet(
    name: string,
    facetAddress: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addFacet(string,address,string)"(
    name: string,
    facetAddress: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addGuardian(
    hashId: BytesLike,
    guardian: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addGuardian(bytes32,bytes32)"(
    hashId: BytesLike,
    guardian: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createWallet(
    hashId: BytesLike,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createWallet(bytes32,address)"(
    hashId: BytesLike,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createWalletDeterministic(
    hashId: BytesLike,
    salt: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createWalletDeterministic(bytes32,bytes32)"(
    hashId: BytesLike,
    salt: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getDiamond(overrides?: CallOverrides): Promise<string>;

  "getDiamond()"(overrides?: CallOverrides): Promise<string>;

  getFacet(
    arrayIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<WalletFactoryStorage.FacetStructOutput>;

  "getFacet(uint256)"(
    arrayIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<WalletFactoryStorage.FacetStructOutput>;

  getFacetIndex(
    facetAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getFacetIndex(address)"(
    facetAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFacets(
    overrides?: CallOverrides
  ): Promise<WalletFactoryStorage.FacetStructOutput[]>;

  "getFacets()"(
    overrides?: CallOverrides
  ): Promise<WalletFactoryStorage.FacetStructOutput[]>;

  getWallet(hashId: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getWallet(bytes32)"(
    hashId: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  predictDeterministicAddress(
    salt: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "predictDeterministicAddress(bytes32)"(
    salt: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  removeGuardian(
    hashId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "removeGuardian(bytes32)"(
    hashId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDiamond(
    diamond: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setDiamond(address)"(
    diamond: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    WALLET_CREATION(overrides?: CallOverrides): Promise<string>;

    "WALLET_CREATION()"(overrides?: CallOverrides): Promise<string>;

    addFacet(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addFacet(string,address,string)"(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addGuardian(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "addGuardian(bytes32,bytes32)"(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    createWallet(
      hashId: BytesLike,
      owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "createWallet(bytes32,address)"(
      hashId: BytesLike,
      owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    createWalletDeterministic(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "createWalletDeterministic(bytes32,bytes32)"(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getDiamond(overrides?: CallOverrides): Promise<string>;

    "getDiamond()"(overrides?: CallOverrides): Promise<string>;

    getFacet(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<WalletFactoryStorage.FacetStructOutput>;

    "getFacet(uint256)"(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<WalletFactoryStorage.FacetStructOutput>;

    getFacetIndex(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacetIndex(address)"(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacets(
      overrides?: CallOverrides
    ): Promise<WalletFactoryStorage.FacetStructOutput[]>;

    "getFacets()"(
      overrides?: CallOverrides
    ): Promise<WalletFactoryStorage.FacetStructOutput[]>;

    getWallet(hashId: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getWallet(bytes32)"(
      hashId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    predictDeterministicAddress(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "predictDeterministicAddress(bytes32)"(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    removeGuardian(hashId: BytesLike, overrides?: CallOverrides): Promise<void>;

    "removeGuardian(bytes32)"(
      hashId: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setDiamond(diamond: string, overrides?: CallOverrides): Promise<void>;

    "setDiamond(address)"(
      diamond: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "DiamondIsSet(address)"(wallet?: null): DiamondIsSetEventFilter;
    DiamondIsSet(wallet?: null): DiamondIsSetEventFilter;

    "FacetIsAdded(string,address,string)"(
      name?: null,
      facetAddress?: null,
      version?: null
    ): FacetIsAddedEventFilter;
    FacetIsAdded(
      name?: null,
      facetAddress?: null,
      version?: null
    ): FacetIsAddedEventFilter;

    "FacetIsRemoved(address)"(facetAddress?: null): FacetIsRemovedEventFilter;
    FacetIsRemoved(facetAddress?: null): FacetIsRemovedEventFilter;

    "GuardianAdded(bytes32,bytes32)"(
      hashId?: BytesLike | null,
      guardian?: null
    ): GuardianAddedEventFilter;
    GuardianAdded(
      hashId?: BytesLike | null,
      guardian?: null
    ): GuardianAddedEventFilter;

    "GuardianRemoved(bytes32,bytes32)"(
      hashId?: BytesLike | null,
      guardian?: null
    ): GuardianRemovedEventFilter;
    GuardianRemoved(
      hashId?: BytesLike | null,
      guardian?: null
    ): GuardianRemovedEventFilter;

    "NewDiamondWallet(address)"(instance?: null): NewDiamondWalletEventFilter;
    NewDiamondWallet(instance?: null): NewDiamondWalletEventFilter;
  };

  estimateGas: {
    WALLET_CREATION(overrides?: CallOverrides): Promise<BigNumber>;

    "WALLET_CREATION()"(overrides?: CallOverrides): Promise<BigNumber>;

    addFacet(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addFacet(string,address,string)"(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addGuardian(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addGuardian(bytes32,bytes32)"(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createWallet(
      hashId: BytesLike,
      owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createWallet(bytes32,address)"(
      hashId: BytesLike,
      owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createWalletDeterministic(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createWalletDeterministic(bytes32,bytes32)"(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getDiamond(overrides?: CallOverrides): Promise<BigNumber>;

    "getDiamond()"(overrides?: CallOverrides): Promise<BigNumber>;

    getFacet(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacet(uint256)"(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetIndex(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacetIndex(address)"(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacets(overrides?: CallOverrides): Promise<BigNumber>;

    "getFacets()"(overrides?: CallOverrides): Promise<BigNumber>;

    getWallet(hashId: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getWallet(bytes32)"(
      hashId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    predictDeterministicAddress(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "predictDeterministicAddress(bytes32)"(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeGuardian(
      hashId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "removeGuardian(bytes32)"(
      hashId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDiamond(
      diamond: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setDiamond(address)"(
      diamond: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    WALLET_CREATION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "WALLET_CREATION()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addFacet(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addFacet(string,address,string)"(
      name: string,
      facetAddress: string,
      version: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addGuardian(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addGuardian(bytes32,bytes32)"(
      hashId: BytesLike,
      guardian: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createWallet(
      hashId: BytesLike,
      owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createWallet(bytes32,address)"(
      hashId: BytesLike,
      owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createWalletDeterministic(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createWalletDeterministic(bytes32,bytes32)"(
      hashId: BytesLike,
      salt: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getDiamond(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getDiamond()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFacet(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFacet(uint256)"(
      arrayIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetIndex(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFacetIndex(address)"(
      facetAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getFacets()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getWallet(
      hashId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getWallet(bytes32)"(
      hashId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    predictDeterministicAddress(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "predictDeterministicAddress(bytes32)"(
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeGuardian(
      hashId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "removeGuardian(bytes32)"(
      hashId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDiamond(
      diamond: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setDiamond(address)"(
      diamond: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
